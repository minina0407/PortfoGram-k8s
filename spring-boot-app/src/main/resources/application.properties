spring.main.banner-mode=off
spring.main.application-class=com.api.PortfoGram.PortfoGramApplication
management.endpoints.web.exposure.include=health,info,prometheus

management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.minimum-expected-value.http.server.requests=5ms
management.metrics.distribution.maximum-expected-value.http.server.requests=1000ms

# the following trick prepends the trace_id=XXXX value to each log statement,
# which enables correlation with traces from logs
# see tip with MDC in https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.logging.custom-log-configuration
# the label name is 'trace_id' (or also traceId), following https://github.com/grafana/tns/blob/main/production/docker-compose/datasources.yaml
# the MDC value (= loki label value) is 'trace_id' or 0 if not set, see https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/docs/logger-mdc-instrumentation.md
#logging.pattern.level=%prefix(%mdc{trace_id:-0}) %5p
#logging.pattern.console={"traceId":"%X{traceId}","time":"%d{yyyy-MM-dd HH:mm:ss.SSS}", "service.name":"%X{serviceName}", "level":"%p", "message":"%m"}%n
#logging.pattern.file={"traceId":"%X{traceId}","time":"%d{yyyy-MM-dd HH:mm:ss.SSS}", "service.name":"%X{serviceName}", "level":"%p", "message":"%m"}%n
logging.pattern.level=%prefix(%mdc{trace_id:-0}) span_id=%mdc{span_id} %5p
# spring data jpa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=mysql
spring.data.web.pageable.default-page-size=10

# mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:3306/portfoGram
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}

# h2
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# hikari
spring.datasource.hikari.leak-detection-threshold=2000
# HikariCP
spring.datasource.hikari.maximum-pool-size=100
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=580000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.validation-timeout=5000
# MySQL ??? ?? ?? ???
spring.datasource.hikari.connection-init-sql=set wait_timeout=7200
spring.datasource.hikari.max_connections=10000
# server
server.servlet.context-path=/
server.servlet.encoding.enabled=true
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
spring.servlet.multipart.maxFileSize=20MB
spring.servlet.multipart.maxRequestSize=20MB
spring.servlet.multipart.enabled=true  
static.max-file-size=10485760
server.error.whitelabel.enabled=false

# spring security
spring.mvc.throw-exception-if-no-handler-found=true
jwt.secret=4c7dbdd6732ecfee5d79488d0a120f279faebed4d837ee5c5d4b4d804ad7267af3dd92c79853f12fb135385a5447ef304ef540810e0573843d6b30192b0e1b15
jwt.refreshSecret=c7dsafadfsadfsadfsafsdfsafsafsf6dee5c5d4b4d804ad7264654654sdafef304ef540810e0573843d6b3019lyuiluil2b0e1b15
jwt.expirationDateInMinute=60000000
jwt.refreshTokenExpirationDateInMinute=90000000

# for imageEntity
endpoint=http://localhost:8080/api/v1

server.address=0.0.0.0

# redis
spring.redis.host=132.226.225.106
spring.redis.port=6379
spring.cache.type=redis
spring.redis.password=redis

# swagger
springdoc.version=openapi_3_0
springdoc.packages-to-scan=com.api.PortfoGram
springdoc.api-docs.path=/api-docs/json
springdoc.api-docs.resolve-schema-properties=true
springdoc.swagger-ui.path=/api-docs
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
springdoc.writer-with-default-pretty-printer=true
springdoc.default-consumes-media-type=application/json;charset=UTF-8
springdoc.cache.disabled=true
springdoc.swagger-ui.oauth2.enabled=false



#otel
otel.exporter.jaeger.endpoint=http://localhost:4317/v1/trace
#opentracing.exporter.otlp.insecure=true

#logging.level.org.springframework.web=TRACE
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.com.zaxxer.hikari=TRACE

logging.level.root=DEBUG
